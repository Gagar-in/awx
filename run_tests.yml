---
- name: Run tests and collect results
  hosts: hosts
  become: True
  vars_files:
    - gagarin_bmc
  tasks:
  - name: Get system board information
    shell:
      cmd: dmidecode -H 0x0002 | grep Serial | awk '{print $3}'
    register: board_id
  - ansible.builtin.debug:
      msg: "Board ID {{ board_id.stdout }}"
    when: False
  - name: Create output directory
    file:
      path: /tmp/{{ board_id.stdout }}
      state: directory
  - name: Run async Linpack test
    command: 
      cmd: ./runme_xeon64
      chdir: /opt/tests/l_mklb_p_2021.1.1.001/benchmarks_2021.1.1/linux/mkl/benchmarks/linpack/
      creates: lin_xeon64.txt
    async: 600
    poll: 15
    when: False
  - name: Run async Geekbench v3 test
    command: 
      cmd: ./geekbench_x86_64 --save gb_report.txt --export-html /var/www/html/geekbench.html --no-upload
      chdir: /opt/tests/dist/Geekbench-3.4.2-Linux
      creates: gb_report.txt
    async: 600
    poll: 15
    when: False
  - name: Run async Geekbench v5 test
    command: 
      cmd: ./geekbench_x86_64 --export-text gb_report.txt --export-html /var/www/html/geekbench.html --export-json gb_report.json --no-upload
      chdir: /opt/tests/Geekbench-5.4.0-Linux
      creates: gb_report.txt
    async: 600
    poll: 5
  - name: Fetching Geekbench v5 results
    ansible.builtin.fetch:
      src: /opt/tests/Geekbench-5.4.0-Linux/gb_report.txt
      dest: /tmp/{{ board_id.stdout }}/gb5_report.txt
      flat: yes
  - name: Fetching Geekbench v5 results in JSON
    ansible.builtin.fetch:
      src: /opt/tests/Geekbench-5.4.0-Linux/gb_report.json
      dest: /tmp/{{ board_id.stdout }}/gb5_report.json
      flat: yes
  - name: Run Sysbench memory test
    shell: 
      cmd: sysbench memory run | tee sysbench.txt
      chdir: /opt/tests
      creates: sysbench.txt
    async: 60
    poll: 5
  - name: Fetching Sysbench results
    ansible.builtin.fetch:
      src: /opt/tests/sysbench.txt
      dest: /tmp/{{ board_id.stdout }}/sysbench.txt
      flat: yes
  - name: Run Iperf3 network test
    shell: 
      cmd: iperf3 -i 10 -w 100K -t 60 -c "{{ test_ip }}" | tee iperf3.txt
      chdir: /opt/tests
      creates: iperf3.txt
    async: 90
    poll: 5
    when: False
  - name: Get dmidecode info
    shell:
      cmd: dmidecode -t processor -t memory > dmidecode.txt
      chdir: /opt/tests
      creates: dmidecode.txt
  - name: Fetching dmidecode info
    ansible.builtin.fetch:
      src: /opt/tests/dmidecode.txt
      dest: /tmp/{{ board_id.stdout }}/dmidecode.txt
      flat: yes
  - name: Get block device info
    shell:
      cmd: lsblk --output NAME,MODEL,SIZE,SERIAL -P > lsblk.txt
      chdir: /opt/tests
      creates: lsblk.txt
  - name: Fetching block device info
    ansible.builtin.fetch:
      src: /opt/tests/lsblk.txt
      dest: /tmp/{{ board_id.stdout }}/lsblk.txt
      flat: yes
  - name: Run FIO tests
    shell:
      cmd: fio --minimal --output fio.json --output-format=json fio_?.ini
      chdir: /opt/tests
      creates: fio.json
    async: 300
    poll: 5
  - name: Fetching FIO results
    ansible.builtin.fetch:
      src: /opt/tests/fio.json
      dest: /tmp/{{ board_id.stdout }}/fio.json
      flat: yes
  - name: Enable and start Apache to show report
    systemd:
      name: httpd
      state: started
      enabled: True
    when: False
