---
- name: Install basic packages and utilities and prepare test environment
  hosts: hosts
  become: True
  vars_files:
    - gagarin_vault
  tasks:
#  - name: Update existing packages to their latest versions
#    yum:
#      name: '*'
#      state: latest
  - name: Install EPEL repo
    yum:
      name: epel-release 
      state: latest
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
  - name: Install basic system utilities and tests with prerequisites
    yum:
      name: "{{ item }}"
      state: present
    loop:
      - usbutils
      - pciutils
      - dmidecode
      - lm_sensors
      - sysbench
      - iperf3
      - stress-ng
      - fio
      - lsof
      - smartmontools
      - php-cli
      - php-xml
      - php-json
      - expect
      - unzip
      - tar
      - vim-enhanced
      - pcp
      - pcp-system-tools
  - name: Install Python expect module for CentOS 7
    yum: 
      name: pexpect 
      state: present
    when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == '7'
    tags: pexpect
  - name: Install Python expect module for CentOS 8 and Fedora
    yum:
      name: python3-pexpect 
      state: present
    when: 
      - (ansible_distribution == 'CentOS' and ansible_distribution_major_version == '8') or ansible_distribution == 'Fedora'
    tags: pexpect
  - name: Create tests directory
    file:
      path: /opt/tests
      state: directory
      owner: ansible
      group: ansible
  - name: Fetching Linpack
    unarchive:
#      src: https://software.intel.com/content/dam/develop/external/us/en/documents/l_mklb_p_2021.1.1.001.tgz
      src: "http://{{ data_ip }}/l_mklb_p_2021.1.1.001.tgz"
      remote_src: yes
      dest: /opt/tests
      owner: ansible
      group: ansible
  - name: Fetching Geekbench v3
    unarchive:
      src: "http://{{ data_ip }}/Geekbench-3.4.2-Linux.tar.gz"
      remote_src: yes
      dest: /opt/tests
      owner: ansible
      group: ansible
  - name: Register Geekbench v3
    command: 
      cmd: ./geekbench_x86_64 --unlock "{{ gb3_user }}" "{{ gb3_pass }}"
      chdir: /opt/tests/dist/Geekbench-3.4.2-Linux 
    no_log: true
  - name: Fetching Geekbench v5
    unarchive:
      src: "http://{{ data_ip }}/Geekbench-5.4.0-Linux.tar.gz"
      remote_src: yes
      dest: /opt/tests
      owner: ansible
      group: ansible
  - name: Register Geekbench v5
    command: 
      cmd: ./geekbench_x86_64 --unlock "{{ gb5_user }}" "{{ gb5_pass }}"
      chdir: /opt/tests/Geekbench-5.4.0-Linux 
    no_log: true
  - name: Fetching Phoronix test suite
    unarchive:
#      src: https://phoronix-test-suite.com/releases/phoronix-test-suite-9.4.1.tar.gz
      src: "http://{{ data_ip }}/phoronix-test-suite-9.4.1.tar.gz"
      remote_src: yes
      dest: /opt/tests
      owner: ansible
      group: ansible
  - name: Install Phoronix
    command: 
      cmd: ./install-sh
      chdir: /opt/tests/phoronix-test-suite
      creates: /usr/bin/phoronix-test-suite
#  - name: Register Phoronix
#    expect: 
#      command: phoronix-test-suite openbenchmarking-login
#      responses:
#        (?i)User-Name: "{{ pts_user }}"
#        (?i)Password: "{{ pts_pass }}"
#    no_log: true
#    vars:
#      ansible_python_interpreter: /usr/bin/python
  - name: Prepare partitions for FIO tests
    include_tasks: disk.yml
    loop:
#      - a
      - b
      - c
      - d
    loop_control:
      loop_var: dev_item
